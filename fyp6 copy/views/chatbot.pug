extends layout

block content
  #furever-chatbot-root
    #furever-chatbot-container
      // Chat Header
      #furever-chatbot-header Welcome to FurEverHome Pet Assistant

      // Chat Display Area
      #furever-chat-display

      // User Input Section
      #furever-chat-input-section
        input#furever-chat-user-input(type="text", placeholder="Describe your ideal pet...")
        button#furever-chat-send-btn(onclick="sendMessage()") Send

  script.
    // Initialize chatbot with greeting
    window.onload = () => {
      addChatMessage("👋 Hi! What kind of pet are you looking for?", 'bot');
    };

    // Send user message to the chatbot
    async function sendMessage() {
      const userInput = document.getElementById('furever-chat-user-input');
      const userMessage = userInput.value.trim();
      if (!userMessage) return;

      // Display user message
      addChatMessage(userMessage, 'user');
      userInput.value = '';

      try {
        const response = await fetch('/chatbot', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ message: userMessage })
        });

        const data = await response.json();
        console.log("📊 Chatbot Response: ", data); // Debug chatbot response
        handleChatbotResponse(data);
      } catch (error) {
        addChatMessage("⚠️ Error connecting to the chatbot. Try again later.", 'bot');
      }
    }

    // Display chat messages
    function addChatMessage(text, sender) {
      const chatDisplay = document.getElementById('furever-chat-display');
      const messageDiv = document.createElement('div');
      messageDiv.className = sender === 'user' ? 'furever-chat-user-msg' : 'furever-chat-bot-msg';
      messageDiv.innerText = text; // Use innerText to preserve newlines
      chatDisplay.appendChild(messageDiv);
      chatDisplay.scrollTop = chatDisplay.scrollHeight; // Auto-scroll to the bottom
    }

    // Handle chatbot response (supports both array and non-array formats)
    function handleChatbotResponse(data) {
      if (data.pets && Array.isArray(data.pets) && data.pets.length > 0) {
        addChatMessage("🐾 Here are the pets matching your description:", 'bot');

        data.pets.forEach(pet => {
          addChatMessage(`🧡 ${pet.name} - ${pet.type}\n📋 ${pet.description}`, 'bot');
        });
      } else if (data.message) {
        // Handle non-array responses (e.g., errors or no match)
        addChatMessage(data.message, 'bot');
      } else {
        addChatMessage("😔 Sorry, no pets match your description. Try again!", 'bot');
      }
    }
